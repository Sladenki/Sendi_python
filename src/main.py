"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ Sendi
"""

import sys
import os
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
    QPushButton, QTextEdit, QLabel, QTabWidget, QScrollArea,
    QFrame, QGridLayout, QSpacerItem, QSizePolicy
)
from PyQt5.QtCore import Qt, QThread, pyqtSignal, QTimer
from PyQt5.QtGui import QFont, QIcon, QPixmap, QPalette, QColor, QLinearGradient

from core.voice_assistant import VoiceAssistant


class ModernMainWindow(QMainWindow):
    """–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ —Å –≤–∫–ª–∞–¥–∫–∞–º–∏"""
    
    def __init__(self):
        super().__init__()
        self.voice_assistant = VoiceAssistant()
        self.setup_ui()
        self.setup_connections()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setWindowTitle("Sendi - –ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫")
        self.setMinimumSize(900, 700)
        self.setStyleSheet(self.get_modern_stylesheet())
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        # –ì–ª–∞–≤–Ω—ã–π layout
        main_layout = QVBoxLayout(central_widget)
        main_layout.setContentsMargins(20, 20, 20, 20)
        main_layout.setSpacing(20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.create_header(main_layout)
        
        # –í–∫–ª–∞–¥–∫–∏
        self.create_tabs(main_layout)
        
        # –°—Ç–∞—Ç—É—Å –±–∞—Ä
        self.create_status_bar()
        
    def create_header(self, layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
        header_frame = QFrame()
        header_frame.setObjectName("headerFrame")
        header_layout = QHBoxLayout(header_frame)
        
        # –õ–æ–≥–æ—Ç–∏–ø –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
        title_layout = QVBoxLayout()
        title_label = QLabel("üé§ Sendi")
        title_label.setObjectName("titleLabel")
        subtitle_label = QLabel("–ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è")
        subtitle_label.setObjectName("subtitleLabel")
        
        title_layout.addWidget(title_label)
        title_layout.addWidget(subtitle_label)
        
        # –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        status_layout = QVBoxLayout()
        self.connection_status = QLabel("üî¥ –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        self.connection_status.setObjectName("statusLabel")
        self.microphone_status = QLabel("–ú–∏–∫—Ä–æ—Ñ–æ–Ω: –ù–µ–∞–∫—Ç–∏–≤–µ–Ω")
        self.microphone_status.setObjectName("microphoneStatus")
        
        status_layout.addWidget(self.connection_status)
        status_layout.addWidget(self.microphone_status)
        
        header_layout.addLayout(title_layout)
        header_layout.addStretch()
        header_layout.addLayout(status_layout)
        
        layout.addWidget(header_frame)
        
    def create_tabs(self, layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫"""
        self.tab_widget = QTabWidget()
        self.tab_widget.setObjectName("tabWidget")
        
        # –í–∫–ª–∞–¥–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.create_control_tab()
        
        # –í–∫–ª–∞–¥–∫–∞ –∫–æ–º–∞–Ω–¥
        self.create_commands_tab()
        
        # –í–∫–ª–∞–¥–∫–∞ –ª–æ–≥–æ–≤
        self.create_logs_tab()
        
        layout.addWidget(self.tab_widget)
        
    def create_control_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        control_widget = QWidget()
        control_layout = QVBoxLayout(control_widget)
        control_layout.setContentsMargins(30, 30, 30, 30)
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons_frame = QFrame()
        buttons_frame.setObjectName("buttonsFrame")
        buttons_layout = QVBoxLayout(buttons_frame)
        
        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è
        self.listen_button = QPushButton("üé§ –ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ")
        self.listen_button.setObjectName("primaryButton")
        self.listen_button.setMinimumHeight(60)
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        self.stop_button = QPushButton("‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")
        self.stop_button.setObjectName("secondaryButton")
        self.stop_button.setMinimumHeight(50)
        self.stop_button.setEnabled(False)
        
        # –ö–Ω–æ–ø–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è TTS
        self.test_tts_button = QPushButton("üîä –¢–µ—Å—Ç –≥–æ–ª–æ—Å–∞")
        self.test_tts_button.setObjectName("tertiaryButton")
        self.test_tts_button.setMinimumHeight(50)
        
        buttons_layout.addWidget(self.listen_button)
        buttons_layout.addWidget(self.stop_button)
        buttons_layout.addWidget(self.test_tts_button)
        
        control_layout.addWidget(buttons_frame)
        control_layout.addStretch()
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–∞—Ö
        info_frame = QFrame()
        info_frame.setObjectName("infoFrame")
        info_layout = QVBoxLayout(info_frame)
        
        info_title = QLabel("üí° –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç")
        info_title.setObjectName("infoTitle")
        
        info_text = QLabel(
            "1. –ù–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ'\n"
            "2. –ü—Ä–æ–∏–∑–Ω–µ—Å–∏—Ç–µ –ª—é–±—É—é –∫–æ–º–∞–Ω–¥—É\n"
            "3. –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤–æ –≤–∫–ª–∞–¥–∫–µ '–õ–æ–≥–∏'"
        )
        info_text.setObjectName("infoText")
        
        info_layout.addWidget(info_title)
        info_layout.addWidget(info_text)
        
        control_layout.addWidget(info_frame)
        
        self.tab_widget.addTab(control_widget, "üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
        
    def create_commands_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏"""
        commands_widget = QWidget()
        commands_layout = QVBoxLayout(commands_widget)
        commands_layout.setContentsMargins(30, 30, 30, 30)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        commands_title = QLabel("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
        commands_title.setObjectName("sectionTitle")
        commands_layout.addWidget(commands_title)
        
        # –û–±–ª–∞—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥
        scroll_area = QScrollArea()
        scroll_area.setWidgetResizable(True)
        scroll_area.setObjectName("scrollArea")
        
        scroll_widget = QWidget()
        scroll_layout = QVBoxLayout(scroll_widget)
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        self.create_command_section(scroll_layout, "üíª –°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã", [
            ("üïê –í—Ä–µ–º—è", "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è", ["–≤—Ä–µ–º—è", "–∫–æ—Ç–æ—Ä—ã–π —á–∞—Å", "—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è"]),
            ("üìÖ –î–∞—Ç–∞", "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É", ["–¥–∞—Ç–∞", "–∫–∞–∫–æ–µ —á–∏—Å–ª–æ", "—Å–µ–≥–æ–¥–Ω—è"]),
            ("üíª –°–∏—Å—Ç–µ–º–∞", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ", ["—Å–∏—Å—Ç–µ–º–∞", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ", "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏"]),
            ("‚öôÔ∏è –ü—Ä–æ—Ü–µ—Å—Å—ã", "—Å–ø–∏—Å–æ–∫ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤", ["–ø—Ä–æ—Ü–µ—Å—Å—ã", "–∑–∞–¥–∞—á–∏", "—á—Ç–æ –∑–∞–ø—É—â–µ–Ω–æ"]),
            ("üåê –ë—Ä–∞—É–∑–µ—Ä", "–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", ["–æ—Ç–∫—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä", "–±—Ä–∞—É–∑–µ—Ä", "–∏–Ω—Ç–µ—Ä–Ω–µ—Ç"]),
            ("üìÅ –°–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É", "—Å–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫—É –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ", ["—Å–æ–∑–¥–∞–π –ø–∞–ø–∫—É", "–Ω–æ–≤–∞—è –ø–∞–ø–∫–∞", "—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É"])
        ])
        
        # –í–µ–±-–∫–æ–º–∞–Ω–¥—ã
        self.create_command_section(scroll_layout, "üåê –í–µ–±-–∫–æ–º–∞–Ω–¥—ã –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", [
            ("üìß –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—á—Ç—É", "–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–æ—á—Ç—É Mail.ru", ["–ø—Ä–æ–≤–µ—Ä—å –ø–æ—á—Ç—É", "–ø–æ—á—Ç–∞", "–º–∞–π–ª", "email", "–ø–∏—Å—å–º–∞"]),
            ("üí¨ –û—Ç–∫—Ä—ã—Ç—å Telegram", "–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç Telegram Desktop", ["–æ—Ç–∫—Ä–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º", "—Ç–µ–ª–µ–≥—Ä–∞–º", "telegram"]),
            ("üéµ –í–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É", "–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç OperaGX –∏ Spotify", ["–≤–∫–ª—é—á–∏ –º—É–∑—ã–∫—É", "–º—É–∑—ã–∫–∞", "—Å–ø–æ—Ç–∏—Ñ–∞–π", "spotify", "–æ–ø–µ—Ä–∞"]),
            ("üîí –í–∫–ª—é—á–∏—Ç—å VPN", "–∑–∞–ø—É—Å–∫–∞–µ—Ç Psiphon VPN", ["–≤–∫–ª—é—á–∏ vpn", "vpn", "–ø—Å–∏—Ñ–æ–Ω", "psiphon"])
        ])
        
        scroll_area.setWidget(scroll_widget)
        commands_layout.addWidget(scroll_area)
        
        self.tab_widget.addTab(commands_widget, "üìã –ö–æ–º–∞–Ω–¥—ã")
        
    def create_command_section(self, layout, title, commands):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –∫–æ–º–∞–Ω–¥"""
        section_frame = QFrame()
        section_frame.setObjectName("commandSection")
        section_layout = QVBoxLayout(section_frame)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
        section_title = QLabel(title)
        section_title.setObjectName("commandSectionTitle")
        section_layout.addWidget(section_title)
        
        # –ö–æ–º–∞–Ω–¥—ã
        for icon_name, description, keywords in commands:
            command_frame = QFrame()
            command_frame.setObjectName("commandItem")
            command_layout = QHBoxLayout(command_frame)
            
            # –ò–∫–æ–Ω–∫–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
            icon_label = QLabel(icon_name)
            icon_label.setObjectName("commandIcon")
            
            # –û–ø–∏—Å–∞–Ω–∏–µ
            desc_layout = QVBoxLayout()
            desc_label = QLabel(description)
            desc_label.setObjectName("commandDescription")
            
            keywords_text = ", ".join([f"'{kw}'" for kw in keywords])
            keywords_label = QLabel(f"–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {keywords_text}")
            keywords_label.setObjectName("commandKeywords")
            
            desc_layout.addWidget(desc_label)
            desc_layout.addWidget(keywords_label)
            
            command_layout.addWidget(icon_label)
            command_layout.addLayout(desc_layout)
            command_layout.addStretch()
            
            section_layout.addWidget(command_frame)
        
        layout.addWidget(section_frame)
        
    def create_logs_tab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –ª–æ–≥–æ–≤"""
        logs_widget = QWidget()
        logs_layout = QVBoxLayout(logs_widget)
        logs_layout.setContentsMargins(30, 30, 30, 30)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        logs_title = QLabel("üìù –ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π")
        logs_title.setObjectName("sectionTitle")
        logs_layout.addWidget(logs_title)
        
        # –û–±–ª–∞—Å—Ç—å –ª–æ–≥–æ–≤
        self.logs_text = QTextEdit()
        self.logs_text.setObjectName("logsText")
        self.logs_text.setReadOnly(True)
        self.logs_text.setPlaceholderText("–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –∏ –∫–æ–º–∞–Ω–¥—ã...")
        
        logs_layout.addWidget(self.logs_text)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∞–º–∏
        logs_buttons_layout = QHBoxLayout()
        
        self.clear_logs_button = QPushButton("üóë –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏")
        self.clear_logs_button.setObjectName("tertiaryButton")
        
        self.save_logs_button = QPushButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏")
        self.save_logs_button.setObjectName("tertiaryButton")
        
        logs_buttons_layout.addWidget(self.clear_logs_button)
        logs_buttons_layout.addWidget(self.save_logs_button)
        logs_buttons_layout.addStretch()
        
        logs_layout.addLayout(logs_buttons_layout)
        
        self.tab_widget.addTab(logs_widget, "üìù –õ–æ–≥–∏")
        
    def create_status_bar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å –±–∞—Ä–∞"""
        self.statusBar().setStyleSheet("""
            QStatusBar {
                background-color: #2d3748;
                color: #e2e8f0;
                padding: 5px;
                border-top: 1px solid #4a5568;
            }
        """)
        
    def setup_connections(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å–∏–≥–Ω–∞–ª–æ–≤"""
        self.listen_button.clicked.connect(self.start_listening)
        self.stop_button.clicked.connect(self.stop_listening)
        self.test_tts_button.clicked.connect(self.test_tts)
        self.clear_logs_button.clicked.connect(self.clear_logs)
        self.save_logs_button.clicked.connect(self.save_logs)
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞
        self.voice_assistant.speech_recognized.connect(self.add_log)
        self.voice_assistant.status_changed.connect(self.update_status)
        
    def start_listening(self):
        """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ"""
        if not self.voice_assistant.isRunning():
            self.voice_assistant.running = True
            self.voice_assistant.start()
        self.listen_button.setEnabled(False)
        self.stop_button.setEnabled(True)
        self.connection_status.setText("üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω")
        self.microphone_status.setText("–ú–∏–∫—Ä–æ—Ñ–æ–Ω: –ê–∫—Ç–∏–≤–µ–Ω")
        
    def stop_listening(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ"""
        if self.voice_assistant.isRunning():
            self.voice_assistant.stop()
        self.listen_button.setEnabled(True)
        self.stop_button.setEnabled(False)
        self.connection_status.setText("üî¥ –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        self.microphone_status.setText("–ú–∏–∫—Ä–æ—Ñ–æ–Ω: –ù–µ–∞–∫—Ç–∏–≤–µ–Ω")
        
    def test_tts(self):
        """–¢–µ—Å—Ç –≥–æ–ª–æ—Å–∞"""
        self.voice_assistant.speak("–ü—Ä–∏–≤–µ—Ç! –Ø Sendi, –≤–∞—à –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫.")
        self.add_log("üîä –¢–µ—Å—Ç –≥–æ–ª–æ—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω")
        
    def add_log(self, message):
        """–î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥–∏"""
        self.logs_text.append(f"[{self.get_current_time()}] {message}")
        # –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        self.logs_text.verticalScrollBar().setValue(
            self.logs_text.verticalScrollBar().maximum()
        )
        
    def update_status(self, status):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å"""
        self.connection_status.setText(status)
        
    def clear_logs(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏"""
        self.logs_text.clear()
        
    def save_logs(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏ –≤ —Ñ–∞–π–ª"""
        from PyQt5.QtWidgets import QFileDialog
        filename, _ = QFileDialog.getSaveFileName(
            self, "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏", "", "Text Files (*.txt)"
        )
        if filename:
            with open(filename, 'w', encoding='utf-8') as f:
                f.write(self.logs_text.toPlainText())
            self.add_log(f"–õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {filename}")
            
    def get_current_time(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è"""
        from datetime import datetime
        return datetime.now().strftime("%H:%M:%S")
        
    def get_modern_stylesheet(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏"""
        return """
        QMainWindow {
            background: qlineargradient(x1:0, y1:0, x2:1, y2:1,
                stop:0 #1a202c, stop:1 #2d3748);
        }
        
        QTabWidget::pane {
            border: none;
            background: transparent;
        }
        
        QTabWidget::tab-bar {
            alignment: center;
        }
        
        QTabBar::tab {
            background: #4a5568;
            color: #e2e8f0;
            padding: 12px 24px;
            margin: 0 4px;
            border-radius: 8px 8px 0 0;
            font-weight: bold;
            font-size: 14px;
        }
        
        QTabBar::tab:selected {
            background: #667eea;
            color: white;
        }
        
        QTabBar::tab:hover {
            background: #5a67d8;
            color: white;
        }
        
        #headerFrame {
            background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                stop:0 #667eea, stop:1 #764ba2);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 10px;
        }
        
        #titleLabel {
            color: white;
            font-size: 28px;
            font-weight: bold;
            margin: 0;
        }
        
        #subtitleLabel {
            color: #e2e8f0;
            font-size: 14px;
            margin: 0;
        }
        
        #statusLabel {
            color: white;
            font-size: 16px;
            font-weight: bold;
        }
        
        #microphoneStatus {
            color: #e2e8f0;
            font-size: 12px;
        }
        
        #buttonsFrame {
            background: #2d3748;
            border-radius: 15px;
            padding: 30px;
            border: 1px solid #4a5568;
        }
        
        #primaryButton {
            background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                stop:0 #667eea, stop:1 #764ba2);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: bold;
            padding: 15px;
        }
        
        #primaryButton:hover {
            background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                stop:0 #5a67d8, stop:1 #6b46c1);
        }
        
        #primaryButton:pressed {
            background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                stop:0 #4c51bf, stop:1 #553c9a);
        }
        
        #secondaryButton {
            background: #e53e3e;
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 14px;
            font-weight: bold;
            padding: 12px;
        }
        
        #secondaryButton:hover {
            background: #c53030;
        }
        
        #tertiaryButton {
            background: #4a5568;
            color: #e2e8f0;
            border: none;
            border-radius: 10px;
            font-size: 14px;
            font-weight: bold;
            padding: 12px;
        }
        
        #tertiaryButton:hover {
            background: #5a67d8;
            color: white;
        }
        
        #infoFrame {
            background: #2d3748;
            border-radius: 12px;
            padding: 20px;
            border: 1px solid #4a5568;
        }
        
        #infoTitle {
            color: #667eea;
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 10px;
        }
        
        #infoText {
            color: #e2e8f0;
            font-size: 14px;
            line-height: 1.5;
        }
        
        #sectionTitle {
            color: #667eea;
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 20px;
        }
        
        #scrollArea {
            border: none;
            background: transparent;
        }
        
        #commandSection {
            background: #2d3748;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 20px;
            border: 1px solid #4a5568;
        }
        
        #commandSectionTitle {
            color: #667eea;
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 15px;
        }
        
        #commandItem {
            background: #4a5568;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 10px;
        }
        
        #commandIcon {
            color: #f6ad55;
            font-size: 16px;
            font-weight: bold;
            min-width: 120px;
        }
        
        #commandDescription {
            color: #e2e8f0;
            font-size: 14px;
            font-weight: bold;
        }
        
        #commandKeywords {
            color: #a0aec0;
            font-size: 12px;
            font-style: italic;
        }
        
        #logsText {
            background: #2d3748;
            color: #e2e8f0;
            border: 1px solid #4a5568;
            border-radius: 8px;
            padding: 15px;
            font-family: 'Consolas', 'Monaco', monospace;
            font-size: 13px;
            line-height: 1.4;
        }
        
        QScrollBar:vertical {
            background: #4a5568;
            width: 12px;
            border-radius: 6px;
        }
        
        QScrollBar::handle:vertical {
            background: #667eea;
            border-radius: 6px;
            min-height: 20px;
        }
        
        QScrollBar::handle:vertical:hover {
            background: #5a67d8;
        }
        """


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    app = QApplication(sys.argv)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∏–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app.setStyle('Fusion')
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
    window = ModernMainWindow()
    window.show()
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    sys.exit(app.exec_())


if __name__ == "__main__":
    main() 